{
  "openapi": "3.1.0",
  "info": {
    "title": "ContriBlock API",
    "description": "Blockchain-based contribution mining & exchange platform",
    "version": "0.1.0"
  },
  "paths": {
    "/api/v1/auth/nonce": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Get Nonce",
        "description": "Generate a nonce for SIWE authentication.",
        "operationId": "get_nonce_api_v1_auth_nonce_post",
        "parameters": [
          {
            "name": "wallet",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Wallet"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Response Get Nonce Api V1 Auth Nonce Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/verify": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Verify Signature",
        "description": "Verify SIWE signature and create/login user.",
        "operationId": "verify_signature_api_v1_auth_verify_post",
        "parameters": [
          {
            "name": "wallet",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Wallet"
            }
          },
          {
            "name": "message",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Message"
            }
          },
          {
            "name": "signature",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Signature"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserWithToken"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/me": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get Current User Info",
        "description": "Get current user information.",
        "operationId": "get_current_user_info_api_v1_users_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update User Info",
        "description": "Update current user information.",
        "operationId": "update_user_info_api_v1_users_me_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/users/": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get Users",
        "description": "Get all users (admin only).",
        "operationId": "get_users_api_v1_users__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "role",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/UserRole"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Role"
            }
          },
          {
            "name": "kyc_status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/KYCStatus"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Kyc Status"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  },
                  "title": "Response Get Users Api V1 Users  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{user_id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get User",
        "description": "Get user by ID.",
        "operationId": "get_user_api_v1_users__user_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{user_id}/role": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update User Role",
        "description": "Update user role (admin only).",
        "operationId": "update_user_role_api_v1_users__user_id__role_put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          },
          {
            "name": "role",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UserRole"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{user_id}/kyc": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update User Kyc Status",
        "description": "Update user KYC status (admin only).",
        "operationId": "update_user_kyc_status_api_v1_users__user_id__kyc_put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          },
          {
            "name": "kyc_status",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/KYCStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sectors/": {
      "get": {
        "tags": [
          "Sectors"
        ],
        "summary": "Get Sectors",
        "description": "Get all sectors.",
        "operationId": "get_sectors_api_v1_sectors__get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Sector"
                  },
                  "title": "Response Get Sectors Api V1 Sectors  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Sectors"
        ],
        "summary": "Create Sector",
        "description": "Create a new sector (admin only).",
        "operationId": "create_sector_api_v1_sectors__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SectorCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sector"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sectors/{sector_id}": {
      "get": {
        "tags": [
          "Sectors"
        ],
        "summary": "Get Sector",
        "description": "Get sector by ID.",
        "operationId": "get_sector_api_v1_sectors__sector_id__get",
        "parameters": [
          {
            "name": "sector_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Sector Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sector"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Sectors"
        ],
        "summary": "Update Sector",
        "description": "Update sector (admin only).",
        "operationId": "update_sector_api_v1_sectors__sector_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "sector_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Sector Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SectorUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sector"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Sectors"
        ],
        "summary": "Delete Sector",
        "description": "Delete sector (admin only).",
        "operationId": "delete_sector_api_v1_sectors__sector_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "sector_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Sector Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/contrib/": {
      "get": {
        "tags": [
          "Contributions"
        ],
        "summary": "Get Contributions",
        "description": "Get all contributions with optional filters.",
        "operationId": "get_contributions_api_v1_contrib__get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ContributionStatus"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "sector_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Sector Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Contribution"
                  },
                  "title": "Response Get Contributions Api V1 Contrib  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Contributions"
        ],
        "summary": "Create Contribution",
        "description": "Create a new contribution with metadata and file upload to IPFS.",
        "operationId": "create_contribution_api_v1_contrib__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_create_contribution_api_v1_contrib__post"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContributionWithMetadata"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/contrib/{contribution_id}": {
      "get": {
        "tags": [
          "Contributions"
        ],
        "summary": "Get Contribution",
        "description": "Get contribution by ID with its metadata.",
        "operationId": "get_contribution_api_v1_contrib__contribution_id__get",
        "parameters": [
          {
            "name": "contribution_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Contribution Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContributionWithMetadata"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Contributions"
        ],
        "summary": "Update Contribution",
        "description": "Update contribution (only by owner or admin).",
        "operationId": "update_contribution_api_v1_contrib__contribution_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "contribution_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Contribution Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContributionUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contribution"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Contributions"
        ],
        "summary": "Delete Contribution",
        "description": "Delete contribution (only by owner or admin).",
        "operationId": "delete_contribution_api_v1_contrib__contribution_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "contribution_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Contribution Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/verify/pending": {
      "get": {
        "tags": [
          "Verification"
        ],
        "summary": "Get Pending Verifications",
        "description": "Get all pending contributions for verification (verifier only).",
        "operationId": "get_pending_verifications_api_v1_verify_pending_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Contribution"
                  },
                  "title": "Response Get Pending Verifications Api V1 Verify Pending Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/verify/{contribution_id}/approve": {
      "post": {
        "tags": [
          "Verification"
        ],
        "summary": "Approve Contribution",
        "description": "Approve a contribution (verifier only).",
        "operationId": "approve_contribution_api_v1_verify__contribution_id__approve_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "contribution_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Contribution Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contribution"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/verify/{contribution_id}/reject": {
      "post": {
        "tags": [
          "Verification"
        ],
        "summary": "Reject Contribution",
        "description": "Reject a contribution (verifier only).",
        "operationId": "reject_contribution_api_v1_verify__contribution_id__reject_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "contribution_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Contribution Id"
            }
          },
          {
            "name": "reason",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Reason"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contribution"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/impact/": {
      "get": {
        "tags": [
          "Impact"
        ],
        "summary": "Get Impact Records",
        "description": "Get all impact records with optional filters.",
        "operationId": "get_impact_records_api_v1_impact__get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "contribution_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Contribution Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ImpactRecord"
                  },
                  "title": "Response Get Impact Records Api V1 Impact  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Impact"
        ],
        "summary": "Create Impact Record",
        "description": "Create a new impact record with evidence upload to IPFS.",
        "operationId": "create_impact_record_api_v1_impact__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_create_impact_record_api_v1_impact__post"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImpactRecord"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/impact/{impact_id}": {
      "get": {
        "tags": [
          "Impact"
        ],
        "summary": "Get Impact Record",
        "description": "Get impact record by ID.",
        "operationId": "get_impact_record_api_v1_impact__impact_id__get",
        "parameters": [
          {
            "name": "impact_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Impact Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImpactRecord"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/impact/{impact_id}/verify": {
      "post": {
        "tags": [
          "Impact"
        ],
        "summary": "Verify Impact Record",
        "description": "Verify an impact record and distribute tokens (verifier only).",
        "operationId": "verify_impact_record_api_v1_impact__impact_id__verify_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "impact_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Impact Id"
            }
          },
          {
            "name": "token_amount",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "title": "Token Amount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImpactRecord"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/market/items": {
      "get": {
        "tags": [
          "Marketplace"
        ],
        "summary": "Get Marketplace Items",
        "description": "Get all marketplace items with optional filters.",
        "operationId": "get_marketplace_items_api_v1_market_items_get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Active Only"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MarketplaceItem"
                  },
                  "title": "Response Get Marketplace Items Api V1 Market Items Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Marketplace"
        ],
        "summary": "Create Marketplace Item",
        "description": "Create a new marketplace item (admin only).",
        "operationId": "create_marketplace_item_api_v1_market_items_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MarketplaceItemCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketplaceItem"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/market/items/{item_id}": {
      "get": {
        "tags": [
          "Marketplace"
        ],
        "summary": "Get Marketplace Item",
        "description": "Get marketplace item by ID.",
        "operationId": "get_marketplace_item_api_v1_market_items__item_id__get",
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketplaceItem"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Marketplace"
        ],
        "summary": "Update Marketplace Item",
        "description": "Update marketplace item (admin only).",
        "operationId": "update_marketplace_item_api_v1_market_items__item_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MarketplaceItemUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketplaceItem"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Marketplace"
        ],
        "summary": "Delete Marketplace Item",
        "description": "Delete marketplace item (admin only).",
        "operationId": "delete_marketplace_item_api_v1_market_items__item_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Item Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/market/purchase": {
      "post": {
        "tags": [
          "Marketplace"
        ],
        "summary": "Purchase Item",
        "description": "Purchase an item from the marketplace.",
        "operationId": "purchase_item_api_v1_market_purchase_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Purchase"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/market/purchases": {
      "get": {
        "tags": [
          "Marketplace"
        ],
        "summary": "Get User Purchases",
        "description": "Get all purchases for the current user.",
        "operationId": "get_user_purchases_api_v1_market_purchases_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Purchase"
                  },
                  "title": "Response Get User Purchases Api V1 Market Purchases Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/market/purchases/{purchase_id}": {
      "get": {
        "tags": [
          "Marketplace"
        ],
        "summary": "Get Purchase",
        "description": "Get purchase by ID (only for the owner or admin).",
        "operationId": "get_purchase_api_v1_market_purchases__purchase_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "purchase_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Purchase Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Purchase"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "tags": [
          "Health"
        ],
        "summary": "Health Check",
        "operationId": "health_check__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Body_create_contribution_api_v1_contrib__post": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "sector_id": {
            "type": "integer",
            "title": "Sector Id"
          },
          "target_amount": {
            "type": "number",
            "title": "Target Amount"
          },
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "title",
          "description",
          "sector_id",
          "target_amount",
          "file"
        ],
        "title": "Body_create_contribution_api_v1_contrib__post"
      },
      "Body_create_impact_record_api_v1_impact__post": {
        "properties": {
          "contribution_id": {
            "type": "integer",
            "title": "Contribution Id"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "impact_value": {
            "type": "number",
            "title": "Impact Value"
          },
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "contribution_id",
          "description",
          "impact_value",
          "file"
        ],
        "title": "Body_create_impact_record_api_v1_impact__post"
      },
      "Contribution": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "abstract": {
            "type": "string",
            "title": "Abstract"
          },
          "ipfs_cid": {
            "type": "string",
            "title": "Ipfs Cid"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          },
          "premium": {
            "type": "boolean",
            "title": "Premium",
            "default": false
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "sector_id": {
            "type": "integer",
            "title": "Sector Id"
          },
          "status": {
            "$ref": "#/components/schemas/ContributionStatus"
          },
          "token_minted": {
            "type": "boolean",
            "title": "Token Minted"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          }
        },
        "type": "object",
        "required": [
          "title",
          "abstract",
          "ipfs_cid",
          "id",
          "user_id",
          "sector_id",
          "status",
          "token_minted",
          "created_at"
        ],
        "title": "Contribution"
      },
      "ContributionMetadataBase": {
        "properties": {
          "data": {
            "additionalProperties": true,
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "ContributionMetadataBase"
      },
      "ContributionStatus": {
        "type": "string",
        "enum": [
          "draft",
          "submitted",
          "under_review",
          "approved",
          "rejected"
        ],
        "title": "ContributionStatus"
      },
      "ContributionUpdate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "abstract": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Abstract"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          },
          "premium": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Premium"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ContributionStatus"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "ContributionUpdate"
      },
      "ContributionWithMetadata": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "sector_id": {
            "type": "integer",
            "title": "Sector Id"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "abstract": {
            "type": "string",
            "title": "Abstract"
          },
          "ipfs_cid": {
            "type": "string",
            "title": "Ipfs Cid"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          },
          "premium": {
            "type": "boolean",
            "title": "Premium",
            "default": false
          },
          "status": {
            "$ref": "#/components/schemas/ContributionStatus"
          },
          "token_minted": {
            "type": "boolean",
            "title": "Token Minted"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "metadata": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ContributionMetadataBase"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "sector_id",
          "title",
          "abstract",
          "ipfs_cid",
          "status",
          "token_minted",
          "created_at"
        ],
        "title": "ContributionWithMetadata"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "ImpactRecord": {
        "properties": {
          "contribution_id": {
            "type": "integer",
            "title": "Contribution Id"
          },
          "metric_type": {
            "type": "string",
            "title": "Metric Type"
          },
          "value": {
            "type": "number",
            "title": "Value"
          },
          "weight": {
            "type": "number",
            "title": "Weight"
          },
          "score": {
            "type": "number",
            "title": "Score"
          },
          "signature": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Signature"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "contribution_id",
          "metric_type",
          "value",
          "weight",
          "score",
          "id"
        ],
        "title": "ImpactRecord"
      },
      "KYCStatus": {
        "type": "string",
        "enum": [
          "none",
          "pending",
          "approved",
          "rejected"
        ],
        "title": "KYCStatus"
      },
      "MarketplaceItem": {
        "properties": {
          "contribution_id": {
            "type": "integer",
            "title": "Contribution Id"
          },
          "price_tokens": {
            "type": "number",
            "title": "Price Tokens"
          },
          "active": {
            "type": "boolean",
            "title": "Active",
            "default": true
          },
          "id": {
            "type": "integer",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "contribution_id",
          "price_tokens",
          "id"
        ],
        "title": "MarketplaceItem"
      },
      "MarketplaceItemCreate": {
        "properties": {
          "contribution_id": {
            "type": "integer",
            "title": "Contribution Id"
          },
          "price_tokens": {
            "type": "number",
            "title": "Price Tokens"
          },
          "active": {
            "type": "boolean",
            "title": "Active",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "contribution_id",
          "price_tokens"
        ],
        "title": "MarketplaceItemCreate"
      },
      "MarketplaceItemUpdate": {
        "properties": {
          "price_tokens": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price Tokens"
          },
          "active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Active"
          }
        },
        "type": "object",
        "title": "MarketplaceItemUpdate"
      },
      "Purchase": {
        "properties": {
          "item_id": {
            "type": "integer",
            "title": "Item Id"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "buyer_id": {
            "type": "integer",
            "title": "Buyer Id"
          },
          "tx_hash": {
            "type": "string",
            "title": "Tx Hash"
          }
        },
        "type": "object",
        "required": [
          "item_id",
          "id",
          "buyer_id",
          "tx_hash"
        ],
        "title": "Purchase"
      },
      "PurchaseCreate": {
        "properties": {
          "item_id": {
            "type": "integer",
            "title": "Item Id"
          }
        },
        "type": "object",
        "required": [
          "item_id"
        ],
        "title": "PurchaseCreate"
      },
      "Sector": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "metadata_schema": {
            "additionalProperties": true,
            "type": "object",
            "title": "Metadata Schema",
            "description": "JSON schema for contribution metadata"
          },
          "verification_policy": {
            "additionalProperties": true,
            "type": "object",
            "title": "Verification Policy",
            "description": "Verification requirements"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "metadata_schema",
          "verification_policy",
          "id"
        ],
        "title": "Sector"
      },
      "SectorCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "metadata_schema": {
            "additionalProperties": true,
            "type": "object",
            "title": "Metadata Schema",
            "description": "JSON schema for contribution metadata"
          },
          "verification_policy": {
            "additionalProperties": true,
            "type": "object",
            "title": "Verification Policy",
            "description": "Verification requirements"
          }
        },
        "type": "object",
        "required": [
          "name",
          "metadata_schema",
          "verification_policy"
        ],
        "title": "SectorCreate"
      },
      "SectorUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "metadata_schema": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata Schema"
          },
          "verification_policy": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Verification Policy"
          }
        },
        "type": "object",
        "title": "SectorUpdate"
      },
      "User": {
        "properties": {
          "wallet": {
            "type": "string",
            "title": "Wallet"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "role": {
            "$ref": "#/components/schemas/UserRole"
          },
          "reputation": {
            "type": "integer",
            "title": "Reputation"
          },
          "kyc_status": {
            "$ref": "#/components/schemas/KYCStatus"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "wallet",
          "id",
          "role",
          "reputation",
          "kyc_status",
          "created_at"
        ],
        "title": "User"
      },
      "UserRole": {
        "type": "string",
        "enum": [
          "user",
          "verifier",
          "admin"
        ],
        "title": "UserRole"
      },
      "UserUpdate": {
        "properties": {
          "role": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserRole"
              },
              {
                "type": "null"
              }
            ]
          },
          "reputation": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reputation"
          },
          "kyc_status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/KYCStatus"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "UserUpdate"
      },
      "UserWithToken": {
        "properties": {
          "wallet": {
            "type": "string",
            "title": "Wallet"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "role": {
            "$ref": "#/components/schemas/UserRole"
          },
          "reputation": {
            "type": "integer",
            "title": "Reputation"
          },
          "kyc_status": {
            "$ref": "#/components/schemas/KYCStatus"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type",
            "default": "bearer"
          }
        },
        "type": "object",
        "required": [
          "wallet",
          "id",
          "role",
          "reputation",
          "kyc_status",
          "created_at",
          "access_token"
        ],
        "title": "UserWithToken"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "OAuth2PasswordBearer": {
        "type": "oauth2",
        "flows": {
          "password": {
            "scopes": {

            },
            "tokenUrl": "/api/v1/auth/login"
          }
        }
      }
    }
  }
}